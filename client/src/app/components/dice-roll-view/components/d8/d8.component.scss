$containerWidth: 200px;
$containerHeight: $containerWidth;

$faceWidth:  $containerWidth*0.7;
$faceHeight: $faceWidth*0.86;

$transitionDuration: 0.5s;
$animationDuration:  1s;

$angle: 35.5deg;
$ringAngle: 35.5deg;
$sideAngle: 360deg/4;
$opacity: 0.75;
$color: rgba(30, 180, 20, $opacity);

$rotateX: -$angle;
$translateZ: $faceWidth*0.25;
$translateY: -$faceHeight*0.15 + 8;
$translateRingZ: $faceWidth*0.75;
$translateRingY: $faceHeight*0.815 + $translateY;
$translateLowerZ: $translateZ;
$translateLowerY: $faceHeight*0.78 + $translateRingY;

@keyframes roll {
  10% { transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg) }
  30% { transform: rotateX(120deg) rotateY(240deg) rotateZ(0deg) }
  50% { transform: rotateX(240deg) rotateY(480deg) rotateZ(0deg) }
  70% { transform: rotateX(360deg) rotateY(720deg) rotateZ(0deg) }
  90% { transform: rotateX(480deg) rotateY(960deg) rotateZ(0deg) }
}

.content {
  margin: auto auto;
  position: relative;
  width: $containerWidth;
  height: $containerHeight;
  perspective: 1500px;
}

.die {
  position: absolute;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  transition: transform $transitionDuration ease-out;
  cursor: pointer;
  
  transform: rotateX($rotateX);
  
  &.rolling {
    animation: roll $animationDuration linear;
  }
  
  @for $i from 1 through 8 {
      @if $i%2 != 0 {
        &[data-face="#{$i}"] {
            $angleMultiplier: 0;
            @if $i == 3 {
                $angleMultiplier: 1;
            }
            @if $i == 5 {
                $angleMultiplier: 2;
            }
            @if $i == 7 {
                $angleMultiplier: 3;
            }
            transform: rotateX(-$angle) rotateY($sideAngle * $angleMultiplier);
          }
      }
      @else {
        &[data-face="#{$i}"] {
            $angleMultiplier: 0;
            @if $i == 2 {
                $angleMultiplier: 1;
            }
            @if $i == 8 {
                $angleMultiplier: 2;
            }
            @if $i == 6 {
                $angleMultiplier: 3;
            }
            transform: rotateX(-$ringAngle) rotateZ(180deg) rotateY($sideAngle * $angleMultiplier);
          }
      }
  }
    // 2 = 3
    // 3 = 5
    // 4 = 7
    // 5 = 2
    // 6 = 8
    // 7 = 6
    // 8 = 4
  
  .face {
    $horizontalMargin: -$faceWidth*0.5;
    
    position: absolute;
    left: 50%;
    top: 0;
    margin: 0 $horizontalMargin;
    border-left: $faceWidth*0.5 solid transparent;
    border-right: $faceWidth*0.5 solid transparent;
    border-bottom: $faceHeight solid $color;
    width: 0px;
    height: 0px;
    transform-style: preserve-3d;
    backface-visibility: hidden;
    
    counter-increment: steps 1;
  
    &:before {
      content: counter(steps);
      position: absolute;
      top: $faceHeight*0.25;
      left: -$faceWidth;
      color: #fff;
      text-shadow: 1px 1px 3px #000;
      font-size: $faceHeight*0.5;
      text-align: center;
      line-height: $faceHeight*0.9;
      width: $faceWidth*2;
      height: $faceHeight;
    }
    
    @for $i from 1 through 4 {
      &:nth-child(#{$i}) {
        @if $i == 2 {
            &:before {
                content: '3';
            }
        }
        @if $i == 3 {
            &:before {
                content: '5';
            }
        }
        @if $i == 4 {
            &:before {
                content: '7';
            }
        }
        $angleMultiplier: $i - 1;
        transform: rotateY(-$sideAngle * $angleMultiplier) translateZ($translateZ) translateY($translateY) rotateX($angle);
      }
    }
      
    @for $i from 5 through 8 {
      &:nth-child(#{$i}) {
        @if $i == 5 {
            &:before {
                content: '8';
            }
        }
        @if $i == 7 {
            &:before {
                content: '4';
            }
        }
        @if $i == 8 {
            &:before {
                content: '2';
            }
        }
        $angleMultiplier: $i - 11;
        transform: rotateY(-$sideAngle * $angleMultiplier) translateZ($translateZ) translateY($translateRingY) rotateZ(180deg) rotateX($ringAngle);
      }
    }
  }
}